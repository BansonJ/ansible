---
- name: 1. 웹서버 설정
  hosts: webservers
  vars:
    pkg_http: httpd
    pkg_https: mod_ssl
    pkg_required_uri: python3-PyMySQL
    pkg_fw: firewalld
    indexfile: /var/www/html/index.html
    svc_web: httpd
    svc_fw: firewalld
    fw_80_tcp: http
    fw_443_tcp: https
  tasks:
    #####################################
    # 0) 변수 설정
    # 1) 패키지 설치 - {{ pkg_http }}, {{ pkg_https }}, {{ pkg_required_uri }}, {{ pkg_fw }}
    # 2) 서비스 설정 - /var/www/html/index.html
    # 3) 서비스 기동 - httpd, firewalld
    # 4) 방화벽 등록 - {{ fw_80_tcp }}, {{ fw_443_tcp }}
      - name: 1) 패키지 설치 - {{ pkg_http }}, {{ pkg_https }}, {{ pkg_required_uri }}, {{ pkg_fw }}
        ansible.builtin.yum:
          name:
            - "{{ pkg_http }}"
            - "{{ pkg_https }}"
            - "{{ pkg_required_uri }}"
            - "{{ pkg_fw }}"
          state: present

      - name: 2) 서비스 설정 - /var/www/html/index.html - {{ indexfile }}
        ansible.builtin.get_url:
          url: http://192.168.10.10/index.html
          dest: "{{ indexfile }}"
          mode: '0644'

      - name: 3) 서비스 기동 - {{ svc_web }}, {{ svc_fw }}
        ansible.builtin.service:
          name: "{{ item }}"
          state: started
          enabled: true
        loop:
          - "{{ svc_web }}"
          - "{{ svc_fw }}"

      - name: 4) 방화벽 등록 - {{ fw_80_tcp }}, {{ fw_443_tcp }}
        ansible.posix.firewalld:
          service: "{{ item }}"
          permanent: true
          immediate: true
          state: enabled
        loop:
          - "{{ fw_80_tcp }}"
          - "{{ fw_443_tcp }}"

- name: 2. 웹 요청
  hosts: localhost
  become: false
  tasks:
    - name: 웹 요청
      ansible.builtin.uri:
        url: https://192.168.10.11/index.html
        status_code: 200
        validate_certs: false
