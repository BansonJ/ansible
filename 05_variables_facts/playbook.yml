---
- name: 1. 고급 웹서버 설정
  hosts: ansible1.example.com
  vars_files:
    - vars/vars.yml
  tasks:
    ########################################
    # 1) 웹 패키지 설치 - httpd, mod_ssl, firewalld (yum),(dnf)
    # 2) 웹 서비스 설정
    #   * /etc/httpd/conf/httpd.conf (AllowOverride AuthConfig) (copy)
    #   * /var/www/html/.htaccess (copy)
    #   * /etc/httpd/secrets 디렉토리 생성 (file)
    #   * /etc/httpd/secrets/htpasswd (copy)
    #   * /var/www/html/index.html  (copy)
    # 3) 웹 서비스 기동 - httpd, firewalld (service)
    # 4) 방화벽 등록 - http, https (firewalld)
    ########################################
    - name: 1) 웹 패키지 설치 - {{ pkg_http }}, {{ pkg_https }}, {{ pkg_fw }}
      ansible.builtin.yum:
        name:
          - "{{ pkg_http }}"
          - "{{ pkg_https }}"
          - "{{ pkg_fw }}"
        state: present

    - name: 2) 웹 서비스 설정 - /etc/httpd/conf/httpd.conf
      ansible.builtin.copy:
        src: "files/{{ webconf }}"
        dest: "/etc/httpd/conf/{{ webconf }}"
        owner: root
        group: root
        mode: '0644'

    - name: 2) 웹 서비스 설정 - /var/www/html/.htaccess
      ansible.builtin.copy:
        src: "files/{{ htaccess }}"
        dest: "/var/www/html/{{ htaccess }}"
        owner: root
        group: root
        mode: '0644'

    - name: 2) 웹 서버 설정 - /etc/httpd/secrets 디렉토리 생성 (file)
      ansible.builtin.file:
        path: "{{ secretdir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: 2) 웹 서비스 설정 - /etc/httpd/secrets/htpasswd
      ansible.builtin.copy:
        src: "files/{{ htpasswd }}"
        dest: "/etc/httpd/secrets/{{ htpasswd }}"
        owner: apache
        group: apache
        mode: '0400'

    - name: 2) 웹 서비스 설정 - /var/www/html/index.html
      ansible.builtin.copy:
        content: |
          <h1><pre>
          hostname: {{ ansible_hostname }}
          hostname: {{ ansible_fqdn }}
          hostname: {{ ansible_facts['fqdn'] }}
          IP: {{ ansible_default_ipv4.address }}
          IP: {{ ansible_facts['default_ipv4'].address }}
          IP: {{ ansible_facts['default_ipv4']['address'] }}
          </h1></pre>
        dest: /var/www/html/index.html
        mode: '0644'
    - name: 3) 웹 서비스 기동 - httpd, firewalld (service)
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - "{{ svc_web }}"
        - "{{ svc_fw }}"

    - name: 4) 방화벽 등록 - http, https
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: true
        immediate: true
        state: enabled
      loop:
        - "80/tcp"
        - "443/tcp"

- name: 2. 웹 요청 및 확인
  hosts: localhost
  become: false
  gather_facts: false
  vars_files:
    - vars/secret.yml
  tasks:
    ######################################################
    # 웹요청
    # * url: http://192.168.10.10/index.html
    # * ID/PASS: guest/soldesk1.
    #   => vars/secret.yml
    #   => vault password: guest/soldesk1.
    #   => echo 'soldesk1.' > vault_pass && chmod 600 vault_pass
    #   => ansible-playbook playbook.yml --vault-password-file=
    #####################################################
    - name: 웹 요청 확인
      ansible.builtin.uri:
        url: http://192.168.10.10/index.html
        validate_certs: false
        user: "{{ web_user }}"
        password: "{{ web_pass }}"
        force_basic_auth: true
        status_code: 200
      register: output

    - name: 웹 응답 내용 확인
      ansible.builtin.debug: var=output
